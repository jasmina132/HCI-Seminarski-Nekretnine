//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nekreatnine_App.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class nekreatnineEntities : DbContext
    {
        public nekreatnineEntities()
            : base("name=nekreatnineEntities")
        {
            this.Configuration.ProxyCreationEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Korisnici> Korisnici { get; set; }
        public virtual DbSet<Nekreatnina> Nekreatnina { get; set; }
        public virtual DbSet<SlikeNekreatnina> SlikeNekreatnina { get; set; }
        public virtual DbSet<StanApartman> StanApartman { get; set; }
        public virtual DbSet<VrstaNekreatnine> VrstaNekreatnine { get; set; }
        public virtual DbSet<Lokacija> Lokacija { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Favorit> Favorit { get; set; }
        public virtual DbSet<Izdavac> Izdavac { get; set; }
        public virtual DbSet<Poruka> Poruka { get; set; }
    
        public virtual ObjectResult<get_Nekreatnine_HCI_Result> get_Nekreatnine_HCI()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_Nekreatnine_HCI_Result>("get_Nekreatnine_HCI");
        }
    
        public virtual ObjectResult<Nullable<decimal>> insert_Nekreatnine_HCI(Nullable<int> vrstaId, Nullable<int> lokacijaId, Nullable<decimal> cijena, Nullable<int> velicina, string opis)
        {
            var vrstaIdParameter = vrstaId.HasValue ?
                new ObjectParameter("VrstaId", vrstaId) :
                new ObjectParameter("VrstaId", typeof(int));
    
            var lokacijaIdParameter = lokacijaId.HasValue ?
                new ObjectParameter("LokacijaId", lokacijaId) :
                new ObjectParameter("LokacijaId", typeof(int));
    
            var cijenaParameter = cijena.HasValue ?
                new ObjectParameter("Cijena", cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            var velicinaParameter = velicina.HasValue ?
                new ObjectParameter("Velicina", velicina) :
                new ObjectParameter("Velicina", typeof(int));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("insert_Nekreatnine_HCI", vrstaIdParameter, lokacijaIdParameter, cijenaParameter, velicinaParameter, opisParameter);
        }
    
        public virtual int insert_SlikeNekreatnine_HCI(Nullable<int> nekreatninaId, byte[] slika)
        {
            var nekreatninaIdParameter = nekreatninaId.HasValue ?
                new ObjectParameter("NekreatninaId", nekreatninaId) :
                new ObjectParameter("NekreatninaId", typeof(int));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_SlikeNekreatnine_HCI", nekreatninaIdParameter, slikaParameter);
        }
    
        public virtual int insert_StanApartman_HCI(Nullable<int> nekreatnina, Nullable<int> cijenaKvadrata, Nullable<bool> uknjizeno, string opremljenost, Nullable<bool> grijanje, Nullable<bool> lift, Nullable<bool> balkon, Nullable<bool> parking, Nullable<bool> plin, Nullable<bool> kablovksaTv)
        {
            var nekreatninaParameter = nekreatnina.HasValue ?
                new ObjectParameter("Nekreatnina", nekreatnina) :
                new ObjectParameter("Nekreatnina", typeof(int));
    
            var cijenaKvadrataParameter = cijenaKvadrata.HasValue ?
                new ObjectParameter("CijenaKvadrata", cijenaKvadrata) :
                new ObjectParameter("CijenaKvadrata", typeof(int));
    
            var uknjizenoParameter = uknjizeno.HasValue ?
                new ObjectParameter("Uknjizeno", uknjizeno) :
                new ObjectParameter("Uknjizeno", typeof(bool));
    
            var opremljenostParameter = opremljenost != null ?
                new ObjectParameter("Opremljenost", opremljenost) :
                new ObjectParameter("Opremljenost", typeof(string));
    
            var grijanjeParameter = grijanje.HasValue ?
                new ObjectParameter("Grijanje", grijanje) :
                new ObjectParameter("Grijanje", typeof(bool));
    
            var liftParameter = lift.HasValue ?
                new ObjectParameter("Lift", lift) :
                new ObjectParameter("Lift", typeof(bool));
    
            var balkonParameter = balkon.HasValue ?
                new ObjectParameter("Balkon", balkon) :
                new ObjectParameter("Balkon", typeof(bool));
    
            var parkingParameter = parking.HasValue ?
                new ObjectParameter("Parking", parking) :
                new ObjectParameter("Parking", typeof(bool));
    
            var plinParameter = plin.HasValue ?
                new ObjectParameter("Plin", plin) :
                new ObjectParameter("Plin", typeof(bool));
    
            var kablovksaTvParameter = kablovksaTv.HasValue ?
                new ObjectParameter("KablovksaTv", kablovksaTv) :
                new ObjectParameter("KablovksaTv", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_StanApartman_HCI", nekreatninaParameter, cijenaKvadrataParameter, uknjizenoParameter, opremljenostParameter, grijanjeParameter, liftParameter, balkonParameter, parkingParameter, plinParameter, kablovksaTvParameter);
        }
    
        public virtual ObjectResult<get_Nekreatnine_HCI_BySearch_Result> get_Nekreatnine_HCI_BySearch(string nazivGrada, Nullable<bool> balkon, Nullable<bool> grijanje, Nullable<bool> parking, Nullable<bool> plin, Nullable<int> vrstaNekreatnine)
        {
            var nazivGradaParameter = nazivGrada != null ?
                new ObjectParameter("NazivGrada", nazivGrada) :
                new ObjectParameter("NazivGrada", typeof(string));
    
            var balkonParameter = balkon.HasValue ?
                new ObjectParameter("Balkon", balkon) :
                new ObjectParameter("Balkon", typeof(bool));
    
            var grijanjeParameter = grijanje.HasValue ?
                new ObjectParameter("Grijanje", grijanje) :
                new ObjectParameter("Grijanje", typeof(bool));
    
            var parkingParameter = parking.HasValue ?
                new ObjectParameter("Parking", parking) :
                new ObjectParameter("Parking", typeof(bool));
    
            var plinParameter = plin.HasValue ?
                new ObjectParameter("Plin", plin) :
                new ObjectParameter("Plin", typeof(bool));
    
            var vrstaNekreatnineParameter = vrstaNekreatnine.HasValue ?
                new ObjectParameter("VrstaNekreatnine", vrstaNekreatnine) :
                new ObjectParameter("VrstaNekreatnine", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_Nekreatnine_HCI_BySearch_Result>("get_Nekreatnine_HCI_BySearch", nazivGradaParameter, balkonParameter, grijanjeParameter, parkingParameter, plinParameter, vrstaNekreatnineParameter);
        }
    }
}
